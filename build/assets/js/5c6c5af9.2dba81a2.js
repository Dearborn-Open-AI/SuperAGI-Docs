"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4682],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>k});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},g=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=i,k=u["".concat(s,".").concat(d)]||u[d]||m[d]||r;return n?a.createElement(k,o(o({ref:t},g),{},{components:n})):a.createElement(k,o({ref:t},g))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},173:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:1},o="Python SDK",l={unversionedId:"SDK/python_sdk",id:"SDK/python_sdk",title:"Python SDK",description:"SuperAGI Client Library",source:"@site/docs/SDK/python_sdk.md",sourceDirName:"SDK",slug:"/SDK/python_sdk",permalink:"/docs/SDK/python_sdk",draft:!1,editUrl:"https://github.com/TransformerOptimus/SuperAGI-Docs/tree/main/docs/SDK/python_sdk.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"SDK",permalink:"/docs/SDK/"},next:{title:"NodeJS SDK",permalink:"/docs/SDK/node_sdk"}},s={},p=[{value:"SuperAGI Client Library",id:"superagi-client-library",level:2},{value:"Initialization",id:"initialization",level:2},{value:"Parameters:",id:"parameters",level:2},{value:"Creating an Agent with SuperAGI",id:"creating-an-agent-with-superagi",level:2},{value:"Agent Configuration:",id:"agent-configuration",level:2},{value:"Managing Agent Runs",id:"managing-agent-runs",level:2},{value:"Starting an Agent Run:",id:"starting-an-agent-run",level:2},{value:"Checking the Status of Agent Runs:",id:"checking-the-status-of-agent-runs",level:2},{value:"Pausing and Resuming Agent Runs:",id:"pausing-and-resuming-agent-runs",level:2},{value:"Updating an Agent&#39;s Configuration:",id:"updating-an-agents-configuration",level:2},{value:"Fetching Resources of Agent Runs:",id:"fetching-resources-of-agent-runs",level:2},{value:"Data Types in SuperAGI-Client",id:"data-types-in-superagi-client",level:2},{value:"1. AgentSchedule",id:"1-agentschedule",level:3},{value:"2. AgentConfig",id:"2-agentconfig",level:3},{value:"3. AgentUpdateConfig",id:"3-agentupdateconfig",level:3},{value:"4. AgentRun",id:"4-agentrun",level:3},{value:"5. AgentRunFilter",id:"5-agentrunfilter",level:3}],g={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"python-sdk"},"Python SDK"),(0,i.kt)("h2",{id:"superagi-client-library"},"SuperAGI Client Library"),(0,i.kt)("p",null,"The SuperAGI client library is a Python library that provides a convenient way to interact with the SuperAGI API. It allows developers to easily create, manage, and run autonomous agents using the SuperAGI framework."),(0,i.kt)("h2",{id:"initialization"},"Initialization"),(0,i.kt)("p",null,"The SuperAGI-Client library is designed to help you seamlessly interact with the SuperAGI platform. To start, first install the library:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pip install superagi-client\n")),(0,i.kt)("p",null,"After installation, initialize the SuperAGI-Client:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'\nfrom superagi_client import Client\n\nclient = Client(api_key="YOUR_API_KEY", url="YOUR_OPTIONAL_URL")\n')),(0,i.kt)("h2",{id:"parameters"},"Parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"api_key")),": Your unique API key for authentication."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"url")),': (Optional) The URL endpoint for the SuperAGI service. By default, it is set to "',(0,i.kt)("a",{parentName:"li",href:"https://app.superagi.com/"},"https://app.superagi.com/"),'".')),(0,i.kt)("h2",{id:"creating-an-agent-with-superagi"},"Creating an Agent with SuperAGI"),(0,i.kt)("p",null,"An agent is the primary entity in SuperAGI that carries out tasks. To create one:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'\nfrom superagi_client import AgentConfig\n\nagent_config = AgentConfig(\n    name="Sample Agent",\n    description="A descriptive purpose of the agent.",\n    goal=["Define a specific task for the agent"],\n    instruction=["Provide additional guiding instructions"],\n    agent_workflow="Goal Based Workflow",\n    constraints=[],\n    tools=[{"name": "ToolName"}],\n    iteration_interval=500,\n    max_iterations=10,\n    model="gpt-4"\n)\n\nagent = client.create_agent(agent_config=agent_config)\n\n')),(0,i.kt)("h2",{id:"agent-configuration"},"Agent Configuration:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"name")),": A string representing the name of the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"description")),": A brief description of the agent's purpose."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"goal")),": A list of goals/tasks you want the agent to achieve."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"instruction")),": A list of specific instructions to guide the agent's approach."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"agent_workflow")),': Workflow type for the agent. Currently, only "Goal Based Workflow" is supported.'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"constraints")),": (Optional) A list of any constraints you want to place on the agent's operations."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"tools")),": A list of dictionaries where each dictionary defines a tool the agent can use. Example: ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},'{"name": "ReadFile"}')),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"iteration_interval")),": The time interval (in milliseconds) between each iteration/check by the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"max_iterations")),": The maximum number of iterations allowed for the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"model")),': The AI model to be used, e.g., "gpt-4".')),(0,i.kt)("h2",{id:"managing-agent-runs"},"Managing Agent Runs"),(0,i.kt)("p",null,"Once the agent is created, you can initiate its runs, monitor their statuses, and pause or resume them if required."),(0,i.kt)("h2",{id:"starting-an-agent-run"},"Starting an Agent Run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"agent_id = agent['agent_id']\nrun_agent = client.create_agent_run(agent_id=agent_id)\n\n")),(0,i.kt)("p",null,"This starts an agent run and the run_agent contains the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"run_id"))," for the initiated run."),(0,i.kt)("h2",{id:"checking-the-status-of-agent-runs"},"Checking the Status of Agent Runs:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"run_status = client.get_agent_run_status(agent_id=agent_id)\n\n")),(0,i.kt)("p",null,"This retrieves the status of the runs associated with the specified ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"agent_id")),". To filter specific runs or statuses, you can utilize the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"AgentRunFilter"))," type. For instance, to get the status of runs with specific ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"run_ids")),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"\nfrom superagi_client import AgentRunFilter\n\nfilter_config = AgentRunFilter(run_ids=[run_id_1, run_id_2])\nrun_status = client.get_agent_run_status(agent_id=agent_id, agent_run_filter=filter_config)\n\n")),(0,i.kt)("h2",{id:"pausing-and-resuming-agent-runs"},"Pausing and Resuming Agent Runs:"),(0,i.kt)("p",null,"If needed, you can pause specific agent runs and later resume them."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"client.pause_agent(agent_id=agent_id, agent_run_ids=[run_id])\nclient.resume_agent(agent_id=agent_id, agent_run_ids=[run_id])\n\n")),(0,i.kt)("h2",{id:"updating-an-agents-configuration"},"Updating an Agent's Configuration:"),(0,i.kt)("p",null,"Over time, if you want to update any agent's parameters:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'\nfrom superagi_client import AgentUpdateConfig\n\nupdated_config = AgentUpdateConfig(\n    name="Updated Agent Name",\n    goal=["New goal for the agent"]\n)\n\nclient.update_agent(agent_id=agent_id, agent_update_config=updated_config)\n\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"AgentUpdateConfig"))," contains optional parameters allowing you to update only specific attributes of an agent."),(0,i.kt)("h2",{id:"fetching-resources-of-agent-runs"},"Fetching Resources of Agent Runs:"),(0,i.kt)("p",null,"To inspect the resources associated with certain runs:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"resources = client.get_agent_run_resources(agent_run_ids=[run_id])\n")),(0,i.kt)("h2",{id:"data-types-in-superagi-client"},"Data Types in SuperAGI-Client"),(0,i.kt)("h3",{id:"1-agentschedule"},"1. AgentSchedule"),(0,i.kt)("p",null,"Defines the scheduling attributes of an agent."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"agent_id")),": (Optional) An integer representing the ID of the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"start_time")),": ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"datetime"))," indicating when the agent should begin its task."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"recurrence_interval")),": (Optional) A string indicating how frequently the agent should be run (e.g., 'daily', 'weekly')."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"expiry_date")),": (Optional) A ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"datetime"))," indicating when the agent's task schedule should expire."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"expiry_runs")),": (Optional) An integer representing after how many runs the agent's task should expire. By default, it's set to -1 (indicating no expiration based on number of runs).")),(0,i.kt)("h3",{id:"2-agentconfig"},"2. AgentConfig"),(0,i.kt)("p",null,"Represents the configuration attributes required to set up an agent."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"name")),": Name of the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"description")),": Brief description of the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"project_id")),": (Optional) Associated project ID."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"goal")),": Goals or tasks you want the agent to achieve."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"instruction")),": Specific instructions guiding the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"agent_workflow")),': Workflow type. Currently, "Goal Based Workflow" is supported.'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"constraints")),": (Optional) Constraints on the agent's operations."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"tools")),": Tools available for the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"LTM_DB")),": (Optional) Reference to a Long-Term Memory Database."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"exit")),": (Optional) Conditions upon which the agent should terminate."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"permission_type")),": (Optional) Permission level for the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"iteration_interval")),": Time between agent iterations."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"model")),': AI model, e.g., "gpt-4".'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"schedule")),": (Optional) Schedule details for the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"max_iterations")),": Maximum iterations for the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"user_timezone")),": (Optional) User's timezone."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"knowledge")),": (Optional) Reference to the agent's knowledge base.")),(0,i.kt)("h3",{id:"3-agentupdateconfig"},"3. AgentUpdateConfig"),(0,i.kt)("p",null,"Describes the configuration for updating an existing agent. All parameters are optional, which means you only need to include the ones you want to update."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"name")),": (Optional) Updated name of the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"description")),": (Optional) New or revised description for the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"project_id")),": (Optional) If you wish to change or assign a project ID."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"goal")),": (Optional) Modify or redefine the goals or tasks you want the agent to achieve."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"instruction")),": (Optional) Change or provide new specific instructions guiding the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"agent_workflow")),': (Optional) New workflow type if changing. Currently, "Goal Based Workflow" is supported.'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"constraints")),": (Optional) If you need to add or modify constraints on the agent's operations."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"tools")),": (Optional) Update or change the tools available for the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"LTM_DB")),": (Optional) Change or update the reference to a Long-Term Memory Database."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"exit")),": (Optional) Modify conditions upon which the agent should terminate."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"permission_type")),": (Optional) Change the permission level for the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"iteration_interval")),": (Optional) Modify the time between agent iterations."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"model")),': (Optional) Change the AI model, e.g., if you want to switch from "gpt-4" to another model.'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"schedule")),": (Optional) Update the schedule details for the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"max_iterations")),": (Optional) Change the maximum iterations for the agent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"user_timezone")),": (Optional) Update the user's timezone if needed."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"knowledge")),": (Optional) Update or change the reference to the agent's knowledge base.")),(0,i.kt)("h3",{id:"4-agentrun"},"4. AgentRun"),(0,i.kt)("p",null,"Denotes the configuration attributes for starting a new agent run."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"name")),": A string representing the name of the run."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"goal")),": (Optional) A list of specific goals for this run."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"instruction")),": (Optional) A list of specific instructions for this run.")),(0,i.kt)("h3",{id:"5-agentrunfilter"},"5. AgentRunFilter"),(0,i.kt)("p",null,"Defines filters for selecting specific agent runs."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"run_ids")),": (Optional) A list of integers representing specific run IDs."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"run_status_filter")),": (Optional) A string indicating a specific status to filter runs (e.g., 'completed', 'paused').")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"These data types form the backbone of the SuperAGI-Client library. Proper understanding and utilization of these can significantly streamline your interactions with the SuperAGI platform."))}m.isMDXComponent=!0}}]);