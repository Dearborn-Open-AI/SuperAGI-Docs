"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[961],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,g=c["".concat(i,".").concat(d)]||c[d]||m[d]||o;return n?r.createElement(g,s(s({ref:t},u),{},{components:n})):r.createElement(g,s({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9366:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={},s="Agent Performance Monitoring",l={unversionedId:"Core Components/Agents/apm",id:"Core Components/Agents/apm",title:"Agent Performance Monitoring",description:"APM is the analytics dashboard that gives detailed insights into all the agents, models, tokens, runs, etc.",source:"@site/docs/Core Components/Agents/apm.md",sourceDirName:"Core Components/Agents",slug:"/Core Components/Agents/apm",permalink:"/docs/Core Components/Agents/apm",draft:!1,editUrl:"https://github.com/TransformerOptimus/SuperAGI-Docs/tree/main/docs/Core Components/Agents/apm.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Agent type",permalink:"/docs/Core Components/Agents/agent_type"},next:{title:"Delete Agent",permalink:"/docs/Core Components/Agents/delete_agent"}},i={},p=[{value:"Organization-Level metrics:",id:"organization-level-metrics",level:2},{value:"Agent-Level metrics:",id:"agent-level-metrics",level:2},{value:"Run",id:"run",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"agent-performance-monitoring"},"Agent Performance Monitoring"),(0,a.kt)("p",null,"APM is the analytics dashboard that gives detailed insights into all the agents, models, tokens, runs, etc."),(0,a.kt)("p",null,"The KPIs are structured in a way that the user will be able to derive actionable insights. The entire dashboard is interactive and any metric card can be re-ordered or re-sized."),(0,a.kt)("p",null,"All the KPIs are updated only after run completion."),(0,a.kt)("h2",{id:"organization-level-metrics"},"Organization-Level metrics:"),(0,a.kt)("p",null,"These KPIs give an executive overview of SuperAGI."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/bb07ae68-c3e2-43b9-acb2-aceee7327d3f/Screenshot_2023-07-21_at_2.12.59_PM.png",alt:"Screenshot 2023-07-21 at 2.12.59 PM.png"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Total number of agents:")," The total agents that have run till date irrespective of deletion."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Total tokens consumed:")," Total Tokens consumed by all the agents that have run till date irrespective of deletion."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Total Runs:")," Total Runs performed by all the agents that have run till date irrespective of deletion."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Number of Agents per model:")," How many agents have used a particular model"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Number of Runs per model:")," How many runs have been made using a particular model"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Total tokens consumed per model:")," How many tokens have been consumed while using a particular model"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Active Runs:")," The runs that are currently running"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Most used Tools:")," The number of times a Tool has been called or The number of times an Agent has the tool assigned"),(0,a.kt)("h2",{id:"agent-level-metrics"},"Agent-Level metrics:"),(0,a.kt)("p",null,"This shows the model used, tokens consumed, runs made, avg. tokens per run, tools used, calls made, avg. run time for each agent."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/152f6053-7df9-4b2e-b459-511e8d515804/Screenshot_2023-07-21_at_2.13.47_PM.png",alt:"Screenshot 2023-07-21 at 2.13.47 PM.png"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Model:")," Each agent can use only one model"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Tokens Consumed:")," The tokens consumed by a particular agent over all its runs for each agent"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Runs:")," Total runs executed in that agent"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Average Tokens per run:")," Total tokens consumed by the agent/Total runs made by the agent"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Tools used:")," Tools that have been used by an agent over all its runs for each agent"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Calls made:")," Number of calls made across all the runs for each agent"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Average Run time:")," The Total time taken/Total runs made"),(0,a.kt)("h2",{id:"run"},"Run"),(0,a.kt)("p",null,"The three plots of run analytics are connected by a single Agent wise filter which give Tokens consumed per run, calls made per run and Average tokens consumed over all calls per run for a particular agent."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d0969bc8-5154-4b0a-81c8-de96238609c1/Screenshot_2023-07-21_at_2.18.22_PM.png",alt:"Screenshot 2023-07-21 at 2.18.22 PM.png"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Tokens consumed per run:")," Total Tokens consume for a particular run of an agent"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Calls made per run:")," Total calls made for a particular run of an agent"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Average tokens consumed in all call per run:")," The Total Tokens consumed by a Total calls made for a particular run of an agent."))}m.isMDXComponent=!0}}]);