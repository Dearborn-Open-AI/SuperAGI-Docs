"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2358],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),g=o,m=p["".concat(l,".").concat(g)]||p[g]||d[g]||a;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5941:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={},i="Resource Manager",s={unversionedId:"Core Components/resourcemanager",id:"Core Components/resourcemanager",title:"Resource Manager",description:"Introduction",source:"@site/docs/Core Components/resourcemanager.md",sourceDirName:"Core Components",slug:"/Core Components/resourcemanager",permalink:"/docs/Core Components/resourcemanager",draft:!1,editUrl:"https://github.com/TransformerOptimus/SuperAGI-Docs/tree/main/docs/Core Components/resourcemanager.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Edit Agent Template",permalink:"/docs/Core Components/Agents/edit_agent_template"},next:{title:"Toolkits",permalink:"/docs/Toolkit/"}},l={},u=[{value:"Introduction",id:"introduction",level:3},{value:"<strong>Configuration</strong>",id:"configuration",level:3},{value:"Local Configuration",id:"local-configuration",level:3},{value:"Production (Cloud Version) Configuration",id:"production-cloud-version-configuration",level:3},{value:"<strong>Working Mechanism</strong>",id:"working-mechanism",level:3},{value:"Concurrent Agent Operation",id:"concurrent-agent-operation",level:3},{value:"File Storage and Retrieval",id:"file-storage-and-retrieval",level:3},{value:"<strong>User Interface (UI) Representation</strong>",id:"user-interface-ui-representation",level:3}],c={toc:u},p="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(p,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"resource-manager"},"Resource Manager"),(0,o.kt)("h3",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"The SuperAGI Resource Manager facilitates the structured storage and retrieval of files generated by autonomous agents. This component ensures smooth operations of agents, allowing them to read from and save to designated directories based on their unique identification and execution parameters."),(0,o.kt)("h3",{id:"configuration"},(0,o.kt)("strong",{parentName:"h3"},"Configuration")),(0,o.kt)("h3",{id:"local-configuration"},"Local Configuration"),(0,o.kt)("p",null,"For local setups, the configuration is specified through the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"config.yaml"))," file. In this file, paths are set using the following parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RESOURCES_INPUT_ROOT_DIR")),": Designates the root directory for agent inputs. It follows the pattern: ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"workspace/input/{agent_id}")),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"RESOURCES_OUTPUT_ROOT_DIR")),": Specifies the root directory where agent outputs are saved. Two configurations are available:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Per Execution: ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"workspace/output/{agent_id}/{agent_execution_id}"))),(0,o.kt)("li",{parentName:"ul"},"Per Agent: ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"workspace/output/{agent_id}")))))),(0,o.kt)("h3",{id:"production-cloud-version-configuration"},"Production (Cloud Version) Configuration"),(0,o.kt)("p",null,"In the cloud or production environment, input and output directories configurations are preset and cannot be changed."),(0,o.kt)("h3",{id:"working-mechanism"},(0,o.kt)("strong",{parentName:"h3"},"Working Mechanism")),(0,o.kt)("h3",{id:"concurrent-agent-operation"},"Concurrent Agent Operation"),(0,o.kt)("p",null,"The SuperAGI infrastructure supports seamless concurrent operations of multiple agents. Each agent, distinguished by its unique ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"agent_id")),", can run without interference from others."),(0,o.kt)("h3",{id:"file-storage-and-retrieval"},"File Storage and Retrieval"),(0,o.kt)("p",null,"When an agent generates a file during its execution:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"The file is saved to its corresponding output directory."),(0,o.kt)("li",{parentName:"ol"},"If configured at the execution level, the file will reside under the specific ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"agent_execution_id"))," directory."),(0,o.kt)("li",{parentName:"ol"},"Otherwise, it will be stored at the agent level directory.")),(0,o.kt)("p",null,"For reading files, agents access their designated input directory."),(0,o.kt)("h3",{id:"user-interface-ui-representation"},(0,o.kt)("strong",{parentName:"h3"},"User Interface (UI) Representation")),(0,o.kt)("p",null,"In the user interface:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Outputs"),": Users can view files on a per-execution basis. Each execution's stored files are displayed distinctly, allowing users to track and manage the outputs for each run of an agent."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Inputs"),": Files are displayed on an agent-wise basis, ensuring clarity in tracking resources used for agent operations.")),(0,o.kt)("h3",{id:""}),(0,o.kt)("p",null,(0,o.kt)("a",{target:"_blank",href:n(7780).Z},(0,o.kt)("img",{alt:"Resource Manager",src:n(1754).Z,width:"1040",height:"585"}))))}d.isMDXComponent=!0},7780:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/resource_manager-22b1458d158cc9cfe3d54a97fda5ae39.mp4"},1754:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/Resource_manager-4f25889d7a5ed098384071bed4c38573.png"}}]);