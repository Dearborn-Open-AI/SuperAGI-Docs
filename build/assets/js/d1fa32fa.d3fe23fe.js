"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1749],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},g=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(k,o(o({ref:t},g),{},{components:n})):a.createElement(k,o({ref:t},g))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5189:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:2},o="NodeJS SDK",l={unversionedId:"SDK/node_sdk",id:"SDK/node_sdk",title:"NodeJS SDK",description:"The SuperAGI NodeJS client library is designed to offer developers a seamless way to interact with the SuperAGI API. This library enables users to create, manage, and execute autonomous agents within the SuperAGI framework.",source:"@site/docs/SDK/node_sdk.md",sourceDirName:"SDK",slug:"/SDK/node_sdk",permalink:"/docs/SDK/node_sdk",draft:!1,editUrl:"https://github.com/TransformerOptimus/SuperAGI-Docs/tree/main/docs/SDK/node_sdk.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Python SDK",permalink:"/docs/SDK/python_sdk"},next:{title:"Contribute",permalink:"/docs/Contribute/"}},s={},p=[{value:"Installation",id:"installation",level:3},{value:"Initialization",id:"initialization",level:3},{value:"Parameters:",id:"parameters",level:3},{value:"<strong>Creating an Agent with SuperAGI</strong>",id:"creating-an-agent-with-superagi",level:3},{value:"<strong>Managing Agent Runs</strong>",id:"managing-agent-runs",level:3},{value:"<strong>Starting an Agent Run:</strong>",id:"starting-an-agent-run",level:3},{value:"Checking the Status of Agent Runs:",id:"checking-the-status-of-agent-runs",level:3},{value:"Pausing and Resuming Agent Runs:",id:"pausing-and-resuming-agent-runs",level:3},{value:"Updating an Agent&#39;s Configuration:",id:"updating-an-agents-configuration",level:3},{value:"Data Types in SuperAGI-Client for NodeJS",id:"data-types-in-superagi-client-for-nodejs",level:2},{value:"1. AgentSchedule",id:"1-agentschedule",level:3},{value:"2. AgentConfig",id:"2-agentconfig",level:3},{value:"3. AgentUpdateConfig",id:"3-agentupdateconfig",level:3},{value:"4. AgentRun",id:"4-agentrun",level:3},{value:"5. AgentRunFilter",id:"5-agentrunfilter",level:3}],g={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"nodejs-sdk"},"NodeJS SDK"),(0,r.kt)("h1",{id:"superagi-nodejs-client-library"},"SuperAGI-NodeJS Client Library"),(0,r.kt)("p",null,"The SuperAGI NodeJS client library is designed to offer developers a seamless way to interact with the SuperAGI API. This library enables users to create, manage, and execute autonomous agents within the SuperAGI framework."),(0,r.kt)("h3",{id:"installation"},"Installation"),(0,r.kt)("p",null,"To begin, you need to install the library using npm:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install superagi-client\n")),(0,r.kt)("h3",{id:"initialization"},"Initialization"),(0,r.kt)("p",null,"After installation, initialize the SuperAGI-NodeJS Client:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'\nconst { Client } = require(\'superagi_client\');\n\nconst client = new Client({\n  apiKey: "YOUR_API_KEY",\n  url: "YOUR_OPTIONAL_URL"\n});\n\n')),(0,r.kt)("h3",{id:"parameters"},"Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"apiKey")),": Your unique API key for authentication with the SuperAGI service."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"url")),': The URL endpoint for the SuperAGI service. The default is "',(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://app.superagi.com/"},"https://app.superagi.com/")),'".')),(0,r.kt)("h3",{id:"creating-an-agent-with-superagi"},(0,r.kt)("strong",{parentName:"h3"},"Creating an Agent with SuperAGI")),(0,r.kt)("p",null,"To create an agent:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'\nconst { AgentConfig } = require(\'superagi_client\');\n\nconst agentConfig = new AgentConfig({\n  name: "Example Agent",\n  description: "A detailed description outlining the purpose of the agent.",\n  goal: ["List specific tasks for the agent"],\n  instruction: ["List any guiding instructions for the agent"],\n  agentWorkflow: "Goal Based Workflow",\n  constraints: [],\n  tools: [{ name: "Toolkit Name" }],\n  iterationInterval: 500,\n  maxIterations: 10,\n  model: "gpt-4"\n});\n\nconst agent = await client.createAgent(agentConfig);\n\n')),(0,r.kt)("h3",{id:"managing-agent-runs"},(0,r.kt)("strong",{parentName:"h3"},"Managing Agent Runs")),(0,r.kt)("p",null,"After creating an agent, you can control its runs, check their status, and pause or resume them as needed."),(0,r.kt)("h3",{id:"starting-an-agent-run"},(0,r.kt)("strong",{parentName:"h3"},"Starting an Agent Run:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const agentId = agent.agentId;\nconst runAgent = client.createAgentRun(agentId);\n\n")),(0,r.kt)("p",null,"On initiating a run, the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"runAgent"))," will contain the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"runId"))," for the started run."),(0,r.kt)("h3",{id:"checking-the-status-of-agent-runs"},"Checking the Status of Agent Runs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const runStatus = client.getAgentRunStatus(agentId);\n\n")),(0,r.kt)("p",null,"To extract the status of specific runs or statuses, use the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"AgentRunFilter"))," class:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const { AgentRunFilter } = require('superagi_client');\n\nconst filterConfig = new AgentRunFilter({ runIds: [runId1, runId2] });\nconst runStatus = await client.getAgentRunStatus(agentId, filterConfig);\n\n")),(0,r.kt)("h3",{id:"pausing-and-resuming-agent-runs"},"Pausing and Resuming Agent Runs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"await client.pauseAgent(agentId, [runId]);\nawait client.resumeAgent(agentId, [runId]);\n\n")),(0,r.kt)("h3",{id:"updating-an-agents-configuration"},"Updating an Agent's Configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'const { AgentUpdateConfig } = require(\'superagi_client\');\n\nconst updatedConfig = new AgentUpdateConfig({\n  name: "New Agent Name",\n  goal: ["List the new goals for the agent"]\n});\n\nawait client.updateAgent(agentId, updatedConfig);\n\n')),(0,r.kt)("h3",{id:""}),(0,r.kt)("h2",{id:"data-types-in-superagi-client-for-nodejs"},"Data Types in SuperAGI-Client for NodeJS"),(0,r.kt)("h3",{id:"1-agentschedule"},"1. AgentSchedule"),(0,r.kt)("p",null,"Defines the scheduling attributes of an agent."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"agentId")),": (Optional) A number representing the ID of the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"startTime")),": ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"Date"))," object indicating when the agent should begin its task."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"recurrenceInterval")),": (Optional) A string indicating how frequently the agent should be run (e.g., 'daily', 'weekly')."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"expiryDate")),": (Optional) A ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"Date"))," object indicating when the agent's task schedule should expire."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"expiryRuns")),": (Optional) A number representing after how many runs the agent's task should expire. By default, it's set to -1 (indicating no expiration based on number of runs).")),(0,r.kt)("h3",{id:"2-agentconfig"},"2. AgentConfig"),(0,r.kt)("p",null,"Represents the configuration attributes required to set up an agent."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"name")),": Name of the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"description")),": Brief description of the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"projectId")),": (Optional) Associated project ID."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"goal")),": Goals or tasks you want the agent to achieve."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"instruction")),": Specific instructions guiding the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"agentWorkflow")),': Workflow type. Currently, "Goal Based Workflow" is supported.'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"constraints")),": (Optional) Constraints on the agent's operations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"tools")),": Tools available for the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"**ltmDb**"),": (Optional) Reference to a Long-Term Memory Database."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"exit")),": (Optional) Conditions upon which the agent should terminate."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"permissionType")),": (Optional) Permission level for the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"iterationInterval")),": Time between agent iterations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"model")),': AI model, e.g., "gpt-4".'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"schedule")),": (Optional) Schedule details for the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"maxIterations")),": Maximum iterations for the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"userTimezone")),": (Optional) User's timezone."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"knowledge")),": (Optional) Reference to the agent's knowledge base.")),(0,r.kt)("h3",{id:"3-agentupdateconfig"},"3. AgentUpdateConfig"),(0,r.kt)("p",null,"Describes the configuration for updating an existing agent. All properties are optional, meaning you only need to include the ones you want to update."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"name")),": (Optional) Updated name of the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"description")),": (Optional) New or revised description for the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"projectId")),": (Optional) If you wish to change or assign a project ID."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"goal")),": (Optional) Modify or redefine the goals or tasks you want the agent to achieve."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"instruction")),": (Optional) Change or provide new specific instructions guiding the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"agentWorkflow")),': (Optional) New workflow type if changing. Currently, "Goal Based Workflow" is supported.'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"constraints")),": (Optional) If you need to add or modify constraints on the agent's operations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"tools")),": (Optional) Update or change the tools available for the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"**ltmDb**"),": (Optional) Change or update the reference to a Long-Term Memory Database."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"exit")),": (Optional) Modify conditions upon which the agent should terminate."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"permissionType")),": (Optional) Change the permission level for the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"iterationInterval")),": (Optional) Modify the time between agent iterations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"model")),': (Optional) Change the AI model, e.g., if you want to switch from "gpt-4" to another model.'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"schedule")),": (Optional) Update the schedule details for the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"maxIterations")),": (Optional) Change the maximum iterations for the agent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"userTimezone")),": (Optional) Update the user's timezone if needed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"knowledge")),": (Optional) Update or change the reference to the agent's knowledge base.")),(0,r.kt)("h3",{id:"4-agentrun"},"4. AgentRun"),(0,r.kt)("p",null,"Denotes the configuration attributes for starting a new agent run."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"name")),": A string representing the name of the run."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"goal")),": (Optional) An array of specific goals for this run."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"instruction")),": (Optional) An array of specific instructions for this run.")),(0,r.kt)("h3",{id:"5-agentrunfilter"},"5. AgentRunFilter"),(0,r.kt)("p",null,"Defines filters for selecting specific agent runs."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"runIds")),": (Optional) An array of numbers representing specific run IDs."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"runStatusFilter")),": (Optional) A string indicating a specific status to filter runs (e.g., 'completed', 'paused').")),(0,r.kt)("hr",null),(0,r.kt)("p",null,"These data types form the backbone of the SuperAGI-Client library for NodeJS. Proper understanding and utilization of these can significantly streamline your interactions with the SuperAGI platform."))}d.isMDXComponent=!0}}]);